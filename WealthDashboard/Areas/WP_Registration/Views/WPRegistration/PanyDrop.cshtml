@{
    Layout = "_WPLayout";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">

    <title>TWP</title>
    <link rel="canonical" href="" />
    <meta content="" name="description">
    <meta content="" name="keywords">

    <!-- Favicons -->
    <link href="" rel="icon">
    <link href="" rel="apple-touch-icon">

    <!-- Google Fonts -->


    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>


    <!-- <link href="https://chhotaniveshgold.com/assets/vendor/boxicons/css/boxicons.min.css"> -->
    <!-- Vendor CSS Files -->
    <link href="~/css/wpregistrationcss/slick.css" rel="stylesheet" />
    <link href="~/css/wpregistrationcss/slick-theme.css" rel="stylesheet" />

    <!-- Template Main CSS File -->
    <link href="~/css/wpregistrationcss/style.css" rel="stylesheet" />
    <link href="~/css/wpregistrationcss/bootstrap.css" rel="stylesheet" />
    <link href="~/css/wpregistrationcss/custom.css" rel="stylesheet" />
</head>


<body ng-app="main" ng-controller="myController">


    <!-- ======= Hero Section ======= -->
    <section id="hero" class=" background-twc-banner" style="height: 900px;">
        <div class="container">
            <header id="header" class="pb-5">
                <div class="container">
                    <div class="row">
                        <div class="col-md-12 text-center mb-4">
                            <a href="index.html">
                                <img src="~/wpregimages/twc-logo.png" alt="" title="" class="img-fluid">
                            </a>
                        </div>
                    </div>
                </div>
            </header>
            <div class="row">
                <div class="col-md-12 mx-auto">
                    <div class="row">
                        <div class="col-md-6 mt-5 pt-5">
                            <div class="row">
                                <div class="mx-auto">
                                    <img src="~/wpregimages/twc-mobile.png" class="img-fluid">
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="row ">
                                <div class="col-md-11 ms-0 mx-auto card login-form">
                                    <div class="row mx-auto mt-5 mb-2">
                                        <img src="~/wpregimages/bank3.png" class="img-fluid">
                                    </div>
                                    <div class="row mb-1">
                                        <div class="form-title text-center">
                                            Pany Drop
                                        </div>

                                    </div>
                                    <div>
                                        <div class="row mb-3 padding-left-form">
                                            <div class="form-floating mb-2">
                                                <input type="text" class="form-control  floating-text-area" id="floatingInput"
                                                       style="color: white;" onkeydown="return blockDigits(event)" oninput="this.value = this.value.toUpperCase();blockSpecialCharacters(event)" placeholder="HERFK4578G" ng-keyup="changename()" ng-model="customerName">

                                                <span ng-if="invalidname" style="color: rgb(212, 25, 25);font-size:small;">
                                                    Please
                                                    Enter Beneficiary Name
                                                </span>
                                                <label for="floatingInput" style="color: #CAAA86;">Customer Name</label>


                                            </div>

                                            <div class="form-floating mb-2">
                                                <input type="text"  class="form-control  floating-text-area" id="floatingInput"
                                                       style="color: white;" oninput="this.value = this.value.replace(/[^0-9]/g, '')" onkeypress="blockspace(event)" placeholder="HERFK4578G" ng-keyup="changeacc()" ng-model="accountno">

                                                <span ng-if="invalidAcc" style="color: rgb(212, 25, 25);font-size:small;">
                                                    Please
                                                    Enter Account Number
                                                </span>
                                                <label for="floatingInput" style="color: #CAAA86;">Account No</label>


                                            </div>
                                            <div class="form-floating mb-2">
                                          
                                                <input id="floatingInput" oninput="this.value = this.value.toUpperCase();preventSpecialCharacters(event)" onkeydown="return blockspace(event)"
                                                       type="text" class="form-control floating-text-area" ng-blur="GetBankDetails()"
                                                       ng-model="IFSCCode" ng-keyup="changeifsc()" style="color: white;" />
                                                <span ng-if="invalidIFSC" style="color: rgb(212, 25, 25);font-size:small;">
                                                    Please
                                                    Enter IFSC Code
                                                </span>
                                                <label for="floatingInput" style="color: #CAAA86;">IFSC Code</label>
                                            </div>
                                            <div>
                                                <label class="orangetext" for="flexCheckChecked">
                                                    {{ADDRESS}}
                                                </label>
                                            </div>

                      
                                        </div>
                                        <div class="row mb-3 row mb-3 ms-2">
                                            <div class="col-md-12 text-center col-12 mt-2 mb-4">
                                                <button ng-disabled="isDisabled" type="button" ng-click="SaveBankDetails()" class="btn rounded btn-submit">Next</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </section><!-- End Hero -->
    <script src="~/js/wpregistration/jquery.min.js"></script>
    <script src="~/js/wpregistration/slick.js"></script>
    <script src="~/js/wpregistration/slick.min.js"></script>
    <script src="~/js/wpregistration/bootstrap.bundle.min.js"></script>
    <!-- Template Main JS File -->


 
    <!---For Angular js-->
    <script src="~/angularjs/toast/angular.min.js"></script>
    <script src="~/angularjs/toast/angular-animate.min.js"></script>
    <link href="~/angularjs/tosters/toaster.css" rel="stylesheet" />
    <script src="~/angularjs/tosters/toaster.js"></script>
    <script src="~/js/wpregistration/panydrop/panydrop.js"></script>


    <script>

        $(document).ready(function () {
            toastr.options = {
                'closeButton': true,
                'debug': false,
                'newestOnTop': false,
                'progressBar': false,
                'positionClass': 'toast-top-right',
                'preventDuplicates': false,
                'showDuration': '1000',
                'hideDuration': '1000',
                'timeOut': '5000',
                'extendedTimeOut': '1000',
                'showEasing': 'swing',
                'hideEasing': 'linear',
                'showMethod': 'fadeIn',
                'hideMethod': 'fadeOut',
            }
        });

        // Toast Position
        $('#position').click(function (event) {
            var pos = $('input[name=position]:checked', '#positionForm').val();
            toastr.options.positionClass = "toast-" + pos;
            toastr.options.preventDuplicates = false;
            toastr.info('This sample position', 'Toast Position')
        });
    </script>

    <script>
        $('.multiple-items').slick({
            arrows: true,
            dots: true,
            number: false,
            infinite: true,
            speed: 300,
            slidesToShow: 4,
            slidesToScroll: 1,
            autoplay: true,
            autoplaySpeed: 2000,
            responsive: [
                {
                    breakpoint: 1024,
                    settings: {
                        slidesToShow: 3,
                        slidesToScroll: 1,
                        infinite: true,
                        dots: true
                    }
                },
                {
                    breakpoint: 600,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 1,
                        dots: false
                    }
                },
                {
                    breakpoint: 480,
                    settings: {
                        slidesToShow: 1,
                        slidesToScroll: 1,
                        dots: false
                    }
                }

            ]
        });

    </script>

    <script>

        function blockspace(event) {
            // Get the key code of the pressed key
            var keyCode = event.keyCode || event.which;

            // Check if the pressed key is the backspace key (key code 8)
            if (keyCode === 32) {
                // Prevent the default behavior of the backspace key
                event.preventDefault();
                return false;
            }
            return true;



        }

    </script>


    <script>
        /* This creates all the OTP input fields dynamically. Change the otp_length variable  to change the OTP Length */
        const $otp_length = 6;

        const element = document.getElementById('OTPInput');
        for (let i = 0; i < $otp_length; i++) {
            let inputField = document.createElement('input'); // Creates a new input element
            inputField.className = "w-12 h-12 bg-gray-100 border-0 outline-none focus:bg-gray-200 text-center focus:border-blue-400 focus:shadow-outline";
            // Do individual OTP input styling here;
            inputField.style.cssText = "text-shadow: 0 0 0 gray;"; // Input field text styling. This css hides the text caret
            inputField.id = 'otp-field' + i; // Don't remove
            inputField.maxLength = 1; // Sets individual field length to 1 char
            element.appendChild(inputField); // Adds the input field to the parent div (OTPInput)
        }

        /*  This is for switching back and forth the input box for user experience */
        const inputs = document.querySelectorAll('#OTPInput > *[id]');
        for (let i = 0; i < inputs.length; i++) {
            inputs[i].addEventListener('keydown', function (event) {
                if (event.key === "Backspace") {

                    if (inputs[i].value == '') {
                        if (i != 0) {
                            inputs[i - 1].focus();
                        }
                    } else {
                        inputs[i].value = '';
                    }

                } else if (event.key === "ArrowLeft" && i !== 0) {
                    inputs[i - 1].focus();
                } else if (event.key === "ArrowRight" && i !== inputs.length - 1) {
                    inputs[i + 1].focus();
                } else if (event.key != "ArrowLeft" && event.key != "ArrowRight") {
                    inputs[i].setAttribute("type", "text");
                    inputs[i].value = ''; // Bug Fix: allow user to change a random otp digit after pressing it
                    setTimeout(function () {
                        inputs[i].setAttribute("type", "number");
                    }, 1000); // Hides the text after 1 sec
                }
            });
            inputs[i].addEventListener('input', function () {
                inputs[i].value = inputs[i].value.toUpperCase(); // Converts to Upper case. Remove .toUpperCase() if conversion isnt required.
                if (i === inputs.length - 1 && inputs[i].value !== '') {
                    return true;
                } else if (inputs[i].value !== '') {
                    inputs[i + 1].focus();
                }
            });

        };


    </script>
    <script>
        function preventSpecialCharacters(event) {
            var inputValue = event.target.value;
            var regex = /^[a-zA-Z0-9]*$/;
            if (!regex.test(inputValue)) {
                event.target.value = inputValue.replace(/[^a-zA-Z0-9]/g, '');
            }
        }

        function blockSpecialCharacters(event) {
            // Get the value of the input field
            var inputValue = event.target.value;

            // Define a regular expression to allow only alphanumeric characters and spaces
            var regex = /^[a-zA-Z0-9 ]*$/;

            // Check if the entered character matches the regular expression
            if (!regex.test(inputValue)) {
                // If a special character is entered, remove it from the input field
                event.target.value = inputValue.replace(/[^a-zA-Z0-9 ]/g, '');
            }
        }

        function blockDigits(event) {
            var keyCode = event.keyCode || event.which;
            if ((keyCode >= 48 && keyCode <= 57) || (keyCode >= 96 && keyCode <= 105)) {
                event.preventDefault();
                return false;
            }
            return true;
        }
        function blockCharacters(event) {
            var keyCode = event.which || event.keyCode;
            var blockedCharacters = [32, 33, 34, /* Add more ASCII values here */];
            if (blockedCharacters.includes(keyCode)) {
                event.preventDefault();
            }
        }

        
    </script>

    </body>
    </html>